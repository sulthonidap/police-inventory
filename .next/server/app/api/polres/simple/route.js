(()=>{var e={};e.id=6182,e.ids=[6182],e.modules={53524:e=>{"use strict";e.exports=require("@prisma/client")},20399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},79348:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},30412:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},18058:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>x,routeModule:()=>l,serverHooks:()=>m,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>c});var s={};t.r(s),t.d(s,{GET:()=>u});var o=t(52412),i=t(14293),n=t(94147),a=t(77856),p=t(47726);async function u(e){try{let{searchParams:r}=new URL(e.url),t=r.get("poldaId")||void 0,s=await p._.polres.findMany({where:t?{poldaId:t}:void 0,select:{id:!0,name:!0,polda:{select:{name:!0}}},orderBy:{name:"asc"}});return a.NextResponse.json(s)}catch(e){return console.error("Error fetching polres:",e),a.NextResponse.json({error:"Failed to fetch polres"},{status:500})}}let l=new o.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/polres/simple/route",pathname:"/api/polres/simple",filename:"route",bundlePath:"app/api/polres/simple/route"},resolvedPagePath:"C:\\Users\\sulth\\Documents\\work\\police-inventory\\src\\app\\api\\polres\\simple\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:d,workUnitAsyncStorage:c,serverHooks:m}=l;function x(){return(0,n.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:c})}},35303:()=>{},47726:(e,r,t)=>{"use strict";t.d(r,{_:()=>o});var s=t(53524);let o=globalThis.prisma??new s.PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[3267,8814],()=>t(18058));module.exports=s})();